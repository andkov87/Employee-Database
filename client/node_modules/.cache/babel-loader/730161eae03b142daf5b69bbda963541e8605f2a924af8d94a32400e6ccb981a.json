{"ast":null,"code":"var _jsxFileName = \"/Users/rubyzli/Desktop/employee-exercise/client/src/Pages/EmployeeList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Loading from \"../Components/Loading\";\nimport EmployeeTable from \"../Components/EmployeeTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchEmployees = signal => {\n  return fetch(\"/api/employees\", {\n    signal\n  }).then(res => res.json());\n};\nconst fetchEmployeesByLevel = query => {\n  return fetch(`/api/employees/level/search?search=${query}`, {}).then(res => res.json());\n};\nconst fetchEmployeesByFirstname = () => {\n  return fetch(\"/api/employees/firstname\", {}).then(res => res.json());\n};\nconst fetchEmployeesByMiddlename = () => {\n  return fetch(\"/api/employees/middlename\", {}).then(res => res.json());\n};\nconst fetchEmployeesByPosition = query => {\n  return fetch(`/api/employees/position/search?search=${query}`, {}).then(res => res.json());\n};\nconst deleteEmployee = id => {\n  return fetch(`/api/employees/${id}`, {\n    method: \"DELETE\"\n  }).then(res => res.json());\n};\nconst updateEmployee = employee => {\n  return fetch(`/api/employees/${employee._id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(employee)\n  }).then(res => res.json());\n};\nconst EmployeeList = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const handleDelete = id => {\n    deleteEmployee(id).catch(err => {\n      console.log(err);\n    });\n    setData(employees => {\n      return employees.filter(employee => employee._id !== id);\n    });\n  };\n  const sortLevel = e => {\n    fetchEmployeesByLevel(e.target.value).then(data => {\n      setData(data);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const sortPosition = e => {\n    fetchEmployeesByPosition(e.target.value).then(data => {\n      setData(data);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const sortByFirstName = () => {\n    fetchEmployeesByFirstname().then(data => {\n      setData(data);\n    });\n  };\n  const sortByMiddlename = () => {\n    fetchEmployeesByMiddlename().then(data => {\n      setData(data);\n    });\n  };\n  useEffect(() => {\n    const controller = new AbortController();\n    fetchEmployees(controller.signal).then(employees => {\n      setLoading(false);\n      setData(employees);\n    }).catch(error => {\n      if (error.name !== \"AbortError\") {\n        setData(null);\n        throw error;\n      }\n    });\n    return () => controller.abort();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EmployeeTable, {\n    employees: data,\n    updateEmployee: updateEmployee,\n    onDelete: handleDelete,\n    sortLevel: sortLevel,\n    sortPosition: sortPosition,\n    sortByFirstName: sortByFirstName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 10\n  }, this);\n};\n_s(EmployeeList, \"EqmXxTNe6/Onm1/o8y2B4tS3LuE=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["useEffect","useState","Loading","EmployeeTable","fetchEmployees","signal","fetch","then","res","json","fetchEmployeesByLevel","query","fetchEmployeesByFirstname","fetchEmployeesByMiddlename","fetchEmployeesByPosition","deleteEmployee","id","method","updateEmployee","employee","_id","headers","body","JSON","stringify","EmployeeList","loading","setLoading","data","setData","handleDelete","catch","err","console","log","employees","filter","sortLevel","e","target","value","sortPosition","sortByFirstName","sortByMiddlename","controller","AbortController","error","name","abort"],"sources":["/Users/rubyzli/Desktop/employee-exercise/client/src/Pages/EmployeeList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Loading from \"../Components/Loading\";\nimport EmployeeTable from \"../Components/EmployeeTable\";\n\nconst fetchEmployees = (signal) => {\n  return fetch(\"/api/employees\", { signal }).then((res) => res.json());\n};\n\nconst fetchEmployeesByLevel = (query) => {\n  return fetch(`/api/employees/level/search?search=${query}`, {})\n    .then(res => res.json())\n};\n\nconst fetchEmployeesByFirstname = () => {\n  return fetch(\"/api/employees/firstname\", {})\n    .then(res => res.json());\n}\n\nconst fetchEmployeesByMiddlename = () => {\n  return fetch(\"/api/employees/middlename\", {})\n    .then(res => res.json())\n}\n\nconst fetchEmployeesByPosition = (query) => {\n  return fetch(`/api/employees/position/search?search=${query}`, {})\n    .then(res => res.json());\n}\n\nconst deleteEmployee = (id) => {\n  return fetch(`/api/employees/${id}`, { method: \"DELETE\" }).then((res) =>\n    res.json()\n  );\n};\n\nconst updateEmployee = (employee) => {\n  return fetch(`/api/employees/${employee._id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(employee),\n  }).then((res) => res.json());\n};\n\nconst EmployeeList = () => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n\n  const handleDelete = (id) => {\n    deleteEmployee(id).catch((err) => {\n      console.log(err);\n    });\n\n    setData((employees) => {\n      return employees.filter((employee) => employee._id !== id);\n    });\n  };\n\n  const sortLevel = (e) => {\n    fetchEmployeesByLevel(e.target.value)\n      .then((data) => {\n        setData(data)\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n\n  const sortPosition = (e) => {\n    fetchEmployeesByPosition(e.target.value)\n      .then(data => {\n        setData(data);\n      })\n      .catch(err => {\n        throw err;\n      })\n  }\n\n  const sortByFirstName = () => {\n    fetchEmployeesByFirstname()\n      .then(data => {\n        setData(data)\n      })\n  }\n\n  const sortByMiddlename = () => {\n    fetchEmployeesByMiddlename()\n      .then(data => {\n        setData(data)\n      })\n  }\n  \n  useEffect(() => {\n    const controller = new AbortController();\n\n    fetchEmployees(controller.signal)\n      .then((employees) => {\n        setLoading(false);\n        setData(employees);\n      })\n      .catch((error) => {\n        if (error.name !== \"AbortError\") {\n          setData(null);\n          throw error;\n        }\n      });\n\n    return () => controller.abort();\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return <EmployeeTable  \n          employees={data} \n          updateEmployee={updateEmployee} \n          onDelete={handleDelete} \n          sortLevel={sortLevel}\n          sortPosition={sortPosition}\n          sortByFirstName={sortByFirstName}\n        />;\n};\n\nexport default EmployeeList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}