{"ast":null,"code":"var _jsxFileName = \"/Users/rubyzli/Desktop/employee-exercise/client/src/EquipmentList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Loading from \"../Components/Loading\";\nimport EquipmentTable from \"./Components/EquipmentTable/EquipmentTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchEquipment = signal => {\n  return fetch(\"/equiment\", {\n    signal\n  }).then(res => res.json());\n};\nconst deleteEquipment = id => {\n  return fetch(`/equipment/${id}`, {\n    method: \"DELETE\"\n  }).then(res => res.json());\n};\nconst updateEquipment = equipment => {\n  return fetch(`/equipment/${equipment._id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(equipment)\n  }).then(res => res.json());\n};\nconst EquipmentList = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const handleDelete = id => {\n    deleteEquipment(id).catch(err => {\n      console.log(err);\n    });\n    setData(equipments => {\n      return equipments.filter(equipment => equipment._id !== id);\n    });\n  };\n  useEffect(() => {\n    const controller = new AbortController();\n    fetchEquipment(controller.signal).then(equipments => {\n      setLoading(false);\n      setData(equipments);\n    }).catch(error => {\n      if (error.name !== \"AbortError\") {\n        setData(null);\n        throw error;\n      }\n    });\n    return () => controller.abort();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EquipmentTable, {\n    employees: data,\n    updateEquipment: updateEquipment,\n    onDelete: handleDelete\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n_s(EquipmentList, \"EqmXxTNe6/Onm1/o8y2B4tS3LuE=\");\n_c = EquipmentList;\nexport default EquipmentList;\nvar _c;\n$RefreshReg$(_c, \"EquipmentList\");","map":{"version":3,"names":["useEffect","useState","Loading","EquipmentTable","fetchEquipment","signal","fetch","then","res","json","deleteEquipment","id","method","updateEquipment","equipment","_id","headers","body","JSON","stringify","EquipmentList","loading","setLoading","data","setData","handleDelete","catch","err","console","log","equipments","filter","controller","AbortController","error","name","abort"],"sources":["/Users/rubyzli/Desktop/employee-exercise/client/src/EquipmentList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Loading from \"../Components/Loading\";\nimport EquipmentTable from \"./Components/EquipmentTable/EquipmentTable\";\n\nconst fetchEquipment = (signal) => {\n  return fetch(\"/equiment\", { signal }).then((res) => res.json());\n};\n\nconst deleteEquipment = (id) => {\n  return fetch(`/equipment/${id}`, { method: \"DELETE\" }).then((res) =>\n    res.json()\n  );\n};\n\nconst updateEquipment = (equipment) => {\n  return fetch(`/equipment/${equipment._id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(equipment),\n  }).then((res) => res.json());\n};\n\nconst EquipmentList = () => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n\n  const handleDelete = (id) => {\n    deleteEquipment(id).catch((err) => {\n      console.log(err);\n    });\n\n    setData((equipments) => {\n      return equipments.filter((equipment) => equipment._id !== id);\n    });\n  };\n  \n  useEffect(() => {\n    const controller = new AbortController();\n\n    fetchEquipment(controller.signal)\n      .then((equipments) => {\n        setLoading(false);\n        setData(equipments);\n      })\n      .catch((error) => {\n        if (error.name !== \"AbortError\") {\n          setData(null);\n          throw error;\n        }\n      });\n\n    return () => controller.abort();\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return <EquipmentTable  \n          employees={data} \n          updateEquipment={updateEquipment} \n          onDelete={handleDelete} \n        />;\n};\n\nexport default EquipmentList;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,4CAA4C;AAAC;AAExE,MAAMC,cAAc,GAAIC,MAAM,IAAK;EACjC,OAAOC,KAAK,CAAC,WAAW,EAAE;IAAED;EAAO,CAAC,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;AACjE,CAAC;AAED,MAAMC,eAAe,GAAIC,EAAE,IAAK;EAC9B,OAAOL,KAAK,CAAE,cAAaK,EAAG,EAAC,EAAE;IAAEC,MAAM,EAAE;EAAS,CAAC,CAAC,CAACL,IAAI,CAAEC,GAAG,IAC9DA,GAAG,CAACC,IAAI,EAAE,CACX;AACH,CAAC;AAED,MAAMI,eAAe,GAAIC,SAAS,IAAK;EACrC,OAAOR,KAAK,CAAE,cAAaQ,SAAS,CAACC,GAAI,EAAC,EAAE;IAC1CH,MAAM,EAAE,OAAO;IACfI,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,SAAS;EAChC,CAAC,CAAC,CAACP,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;AAC9B,CAAC;AAED,MAAMW,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMwB,YAAY,GAAId,EAAE,IAAK;IAC3BD,eAAe,CAACC,EAAE,CAAC,CAACe,KAAK,CAAEC,GAAG,IAAK;MACjCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;IAEFH,OAAO,CAAEM,UAAU,IAAK;MACtB,OAAOA,UAAU,CAACC,MAAM,CAAEjB,SAAS,IAAKA,SAAS,CAACC,GAAG,KAAKJ,EAAE,CAAC;IAC/D,CAAC,CAAC;EACJ,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd,MAAMgC,UAAU,GAAG,IAAIC,eAAe,EAAE;IAExC7B,cAAc,CAAC4B,UAAU,CAAC3B,MAAM,CAAC,CAC9BE,IAAI,CAAEuB,UAAU,IAAK;MACpBR,UAAU,CAAC,KAAK,CAAC;MACjBE,OAAO,CAACM,UAAU,CAAC;IACrB,CAAC,CAAC,CACDJ,KAAK,CAAEQ,KAAK,IAAK;MAChB,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;QAC/BX,OAAO,CAAC,IAAI,CAAC;QACb,MAAMU,KAAK;MACb;IACF,CAAC,CAAC;IAEJ,OAAO,MAAMF,UAAU,CAACI,KAAK,EAAE;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIf,OAAO,EAAE;IACX,oBAAO,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EACpB;EAEA,oBAAO,QAAC,cAAc;IACd,SAAS,EAAEE,IAAK;IAChB,eAAe,EAAEV,eAAgB;IACjC,QAAQ,EAAEY;EAAa;IAAA;IAAA;IAAA;EAAA,QACvB;AACV,CAAC;AAAC,GAzCIL,aAAa;AAAA,KAAbA,aAAa;AA2CnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}